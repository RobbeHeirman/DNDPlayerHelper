"""added Action

Revision ID: e65097fab244
Revises: 44fab12eac11
Create Date: 2024-02-27 16:24:01.904613

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e65097fab244'
down_revision: Union[str, None] = '44fab12eac11'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('STRENGTH', 'DEXTERITY', 'CONSTITUTION', 'INTELLIGENCE', 'WISDOM', name='ability').create(op.get_bind())
    sa.Enum('SHORT_REST', 'LONG_REST', name='recharge').create(op.get_bind())
    sa.Enum('ACTION', 'BONUS_ACTION', name='actionusage').create(op.get_bind())
    op.create_table('action_damage',
    sa.Column('lvl', sa.Integer(), nullable=False),
    sa.Column('action', sa.Integer(), nullable=False),
    sa.Column('d4_count', sa.Integer(), nullable=False),
    sa.Column('d6_count', sa.Integer(), nullable=False),
    sa.Column('d8_count', sa.Integer(), nullable=False),
    sa.Column('d10_count', sa.Integer(), nullable=False),
    sa.Column('d12_count', sa.Integer(), nullable=False),
    sa.Column('d20_count', sa.Integer(), nullable=False),
    sa.Column('expansion', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['action'], ['action.id'], ),
    sa.ForeignKeyConstraint(['expansion'], ['expansion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_action_damage_name'), 'action_damage', ['name'], unique=True)
    op.add_column('action', sa.Column('damage_type', sa.Integer(), nullable=False))
    op.add_column('action', sa.Column('usage', postgresql.ENUM('ACTION', 'BONUS_ACTION', name='actionusage', create_type=False), nullable=False))
    op.add_column('action', sa.Column('recharge', postgresql.ENUM('SHORT_REST', 'LONG_REST', name='recharge', create_type=False), nullable=False))
    op.add_column('action', sa.Column('saving_throw_type', postgresql.ENUM('STRENGTH', 'DEXTERITY', 'CONSTITUTION', 'INTELLIGENCE', 'WISDOM', name='ability', create_type=False), nullable=False))
    op.add_column('action', sa.Column('saving_throw_DC_base', sa.Integer(), nullable=False))
    op.add_column('action', sa.Column('saving_throw_DC_ability_modifier', postgresql.ENUM('STRENGTH', 'DEXTERITY', 'CONSTITUTION', 'INTELLIGENCE', 'WISDOM', name='ability', create_type=False), nullable=False))
    op.add_column('action', sa.Column('saving_throw_DC_use_proficiency', sa.Boolean(), nullable=False))
    op.add_column('action', sa.Column('saving_throw_success_damage_modifier', sa.Float(), nullable=False))
    op.create_foreign_key(None, 'action', 'damage_type', ['damage_type'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'action', type_='foreignkey')
    op.drop_column('action', 'saving_throw_success_damage_modifier')
    op.drop_column('action', 'saving_throw_DC_use_proficiency')
    op.drop_column('action', 'saving_throw_DC_ability_modifier')
    op.drop_column('action', 'saving_throw_DC_base')
    op.drop_column('action', 'saving_throw_type')
    op.drop_column('action', 'recharge')
    op.drop_column('action', 'usage')
    op.drop_column('action', 'damage_type')
    op.drop_index(op.f('ix_action_damage_name'), table_name='action_damage')
    op.drop_table('action_damage')
    sa.Enum('ACTION', 'BONUS_ACTION', name='actionusage').drop(op.get_bind())
    sa.Enum('SHORT_REST', 'LONG_REST', name='recharge').drop(op.get_bind())
    sa.Enum('STRENGTH', 'DEXTERITY', 'CONSTITUTION', 'INTELLIGENCE', 'WISDOM', name='ability').drop(op.get_bind())
    # ### end Alembic commands ###
